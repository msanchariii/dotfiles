---
- name: play
  hosts: localhost
  tasks:

## 1Password
    - name: "Debian | Download 1Password CLI .deb file"
      ansible.builtin.get_url:
        url: "https://downloads.1password.com/linux/debian/arm64/stable/1password-cli-arm64-latest.deb"
        dest: "/tmp/1password-cli-arm64-latest.deb"
      tags:
        - linux-full

    - name: "Debian | Install 1Password CLI"
      ansible.builtin.apt:
        deb: "/tmp/1password-cli-arm64-latest.deb"
        state: present
      become: true
      tags:
        - linux-full

    - name: "Debian | Clean up downloaded .deb file"
      ansible.builtin.file:
        path: "/tmp/1password-cli-arm64-latest.deb"
        state: absent
      tags:
        - linux-full


    - name: "MacOS | Install 1Password and 1Password CLI"
      homebrew:
        name: "{{ item }}"
        state: present
      with_items:
        - 1password
        - 1password-cli
      tags:
        - mac-full


## kitty
    - name: "MacOS | Install Kitty emulator"
      homebrew:
        name: kitty
        state: present
      tags:
        - mac-full


## neovim
    - name: "MacOS | Install Neovim & its Dependencies"
      homebrew:
        name: "{{ item }}"
        state: present
      with_items:
        - libtool
        - ansible-lint
        - ripgrep
        - lua
        - luarocks
        - luajit
        - neovim
      tags:
        - mac-minimal
        - mac-full

    - name: "Debian | Install Neovim & its Dependencies"
      ansible.builtin.apt:
        name:
          - cmake
          - curl
          - pkg-config
          - libtool
          - unzip
          - ansible-lint
          - ripgrep
          - lua5.1
          - luarocks
          - luajit
          - neovim
        state: present
      become: true
      tags:
        - linux-minimal
        - linux-full

    - name: "Neovim | Config folder"
      ansible.builtin.file:
        mode: "0755"
        path: "{{ ansible_user_dir }}/.config/nvim"
        state: directory
      tags:
        - mac-minimal
        - mac-full
        - linux-minimal
        - linux-full


## node.js
    - name: "MacOS | Install Node.js & npm"
      homebrew:
        name:
          - node
          - npm
        state: present
      tags:
        - mac-minimal
        - mac-full

    - name: "Debian | Install Node.js & npm"
      ansible.builtin.apt:
        name:
          - build-essential
          - nodejs
          - npm
        state: present
      become: true
      tags:
        - linux-minimal
        - linux-full

    - name: Install React
      npm:
        name: react
        global: yes
      tags:
        - mac-minimal
        - mac-full
        - linux-minimal
        - linux-full

    - name: Install TypeScript
      npm:
        name: typescript
        global: yes
      tags:
        - mac-minimal
        - mac-full
        - linux-minimal
        - linux-full


## python
    - name: "Debian | Install pip & python-venv"
      ansible.builtin.apt:
        name:
          - python3-pip
          - python3-venv
        state: present
      become: true
      tags:
        - linux-full


## tmux
    - name: "MacOS | Install tmux"
      homebrew:
        name: tmux
        state: present
      tags:
        - mac-minimal
        - mac-full

    - name: "Debian | Install tmux"
      ansible.builtin.apt:
        name: tmux
        state: present
      become: true
      tags:
        - linux-minimal
        - linux-full

    - name: "Tmux | Install TPM"
      ansible.builtin.git:
        repo: https://github.com/tmux-plugins/tpm
        dest: ~/.tmux/plugins/tpm
      tags:
        - mac-minimal
        - mac-full
        - linux-minimal
        - linux-full

    - name: "Tmux | Configure tmux"
      ansible.builtin.copy:
        src: tmux.conf
        dest: "{{ ansible_user_dir }}/.config/"
        mode: "0644"
        directory_mode: "0755"
        force: true
      tags:
        - linux-minimal
        - linux-full

## zsh
    - name: "MacOS | Install ZSH"
      homebrew:
        name: "{{ item }}"
        state: present
      loop:
        - zsh
      tags:
        - mac-minimal
        - mac-full

    - name: "Debian | Install Zsh"
      apt:
        name: zsh
        state: present
      become: true
      tags:
        - linux-minimal
        - linux-full

    - name: "Zsh | Configure .zshrc"
      ansible.builtin.copy:
        src: .zshrc
        dest: "{{ ansible_user_dir }}/"
        force: true
      tags:
        - mac-minimal
        - mac-full
        - linux-minimal
        - linux-full

    - name: "Zsh | Detect oh-my-zsh"
      ansible.builtin.stat:
        path: "{{ ansible_user_dir }}/.oh-my-zsh"
      register: ohmyzsh
      tags:
        - mac-minimal
        - mac-full
        - linux-minimal
        - linux-full

    - name: "Zsh | Install oh-my-zsh if not installed"
      when: not ohmyzsh.stat.exists
      tags:
        - mac-minimal
        - mac-full
        - linux-minimal
        - linux-full
      block:
        - name: "Zsh | Download oh-my-zsh Install Script"
          ansible.builtin.get_url:
            url: "https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh"
            dest: "{{ ansible_user_dir }}/oh-my-zsh.install.sh"
            mode: "0755"

        - name: "Zsh | Run oh-my-zsh Install Script"
          ansible.builtin.command:
            cmd: "sh {{ ansible_user_dir }}/oh-my-zsh.install.sh"

        - name: "Zsh | Cleanup Oh My Zsh Install Script"
          ansible.builtin.file:
            path: "{{ ansible_env.HOME }}/oh-my-zsh.install.sh"
            state: absent

    - name: Clone zsh-syntax-highlighting repository
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
        dest: "{{ ansible_user_dir }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
        depth: 1
      tags:
        - mac-minimal
        - mac-full
        - linux-minimal
        - linux-full

    - name: Add zsh-syntax-highlighting to .zshrc
      ansible.builtin.lineinfile:
        dest: "{{ ansible_user_dir }}/.zshrc"
        line: "source {{ ansible_user_dir }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
      tags:
        - mac-minimal
        - mac-full
        - linux-minimal
        - linux-full

    - name: Clone zsh-autosuggestions repository
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-autosuggestions.git
        dest: "{{ ansible_user_dir }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
        depth: 1
      tags:
        - mac-minimal
        - mac-full
        - linux-minimal
        - linux-full

    - name: Add zsh-autosuggestions to .zshrc
      ansible.builtin.lineinfile:
        dest: "{{ ansible_user_dir }}/.zshrc"
        line: "source {{ ansible_user_dir }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh"
      tags:
        - mac-minimal
        - mac-full
        - linux-minimal
        - linux-full

    - name: "Zsh | Update .zshrc for all users"
      ansible.builtin.copy:
        src: .zshrc
        dest: "~/.zshrc"
        mode: "0644"
      tags:
        - mac-minimal
        - mac-full
        - linux-minimal
        - linux-full
